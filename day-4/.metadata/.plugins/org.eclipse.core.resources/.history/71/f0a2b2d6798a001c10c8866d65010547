#include <stdio.h>
#include <stdint.h>


static const int_least32_t threshold = 20;

static int_least32_t values[4000];
static uint_least16_t indexes[4000];
static int_least16_t indexes_of_even_values[4000];
static int_least32_t even_values[4000];

static void sort(int_least32_t* values, uint_least16_t* indexes, uint_least16_t n)
{
	uint_least16_t i;
	uint_least16_t j;
	for (i = 0; i < (n - 1); i++)
	{
		for (j = i + 1; j < n; j++)
		{
			if (values[i] < values[j])
			{
				int_least32_t tmp;
				uint_least16_t tmp1;

				tmp = values[i];
				values[i] = values[j];
				values[j] = tmp;

				tmp1 = indexes[i];
				indexes[i] = indexes[j];
				indexes[j] = tmp1;
			}
		}
	}
}


static void print(const int_least32_t* values, const uint_least16_t* indexes, uint_least16_t n)
//static void print()
{
	uint_least16_t i = 0;
	printf("Up to the first threshold: ");

	while (values[i] > threshold && i < n)
	{
		printf("%d(%d) ", values[i], indexes[i]);
		i++;
	}
	printf("\n");
	i =0;
	printf("Even numbers up to the threshold");
	for (int i = 0, k = 0 ; i < n; i++)
	{
		if(values[i]<threshold && values[i]%2 == 0)
		{
			indexes_of_even_values[k] = indexes[i];
			even_values[k] = values[i];
			printf("%d(%d) ", values[i], indexes[i]);
			k++;
		}

	}
}

/*
//All even numbers smaller than threshold
static void even_numbers(int_least32_t* values, uint_least16_t* indexes, )
{

}
*/

int main()
{
	uint_least16_t i;
	uint_least16_t n;
	printf("Number of elements: ");
	fflush(stdout); // added because of eclipse console
	scanf("%hd", &n);
	printf("\n");
	for (i = 0; i < n; i++)
	{
		printf("%d. element: ", i);
		fflush(stdout); // added because of eclipse console
		scanf("%d", &values[i]);
		indexes[i] = i;

	}

	sort(values, indexes, n);

	print(values, indexes, n);
	return 0;
}
